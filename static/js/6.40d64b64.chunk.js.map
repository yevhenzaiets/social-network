{"version":3,"sources":["components/common/ControlForm/ControlForm.module.css","helpers/validators.jsx","components/common/ControlForm/ControlForm.jsx","components/Login/Login.jsx"],"names":["module","exports","required","value","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","classes","formControl","Input","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","placeholder","name","component","validate","type","formError","connect","state","isAuth","auth","login","logout","to","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,UAAY,iC,iCCDhH,6EAEaC,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAY,SAACA,GAAD,OAAe,SAACD,GACrC,GAAIA,EAAME,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,c,mJCLrBE,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAE3CC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACI,yBAAKC,UAAWC,IAAQC,YAAc,GAAKD,IAAQF,OAC/C,8CAAcL,EAAWE,IACvBC,GAAY,8BAAOF,EAAKI,SAMzBI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACxCC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACI,yBAAKC,UAAWC,IAAQC,YAAc,GAAKD,IAAQF,OAC/C,2CAAWL,EAAWE,IACpBC,GAAY,8BAAOF,EAAKI,U,iCCtBtC,wGAiCMK,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAxBL,SAAC,GAA0B,IAAzBE,EAAwB,EAAxBA,aAAaR,EAAW,EAAXA,MAC7B,OACI,0BAAMS,SAAUD,GACZ,6BACI,kBAAC,IAAD,CAAOE,YAAa,QAASC,KAAM,QAASC,UAAWR,IAChDS,SAAU,CAACvB,QAEtB,6BACI,kBAAC,IAAD,CAAOoB,YAAa,WAAYC,KAAM,WAAYC,UAAWR,IACtDU,KAAM,WAAYD,SAAU,CAACvB,QAExC,6BACI,kBAAC,IAAD,CAAOwB,KAAM,WAAYH,KAAM,aAAcC,UAAW,UAD5D,gBAGCZ,GAAS,yBAAKC,UAAWC,IAAQa,WAC7Bf,GAEL,6BACI,8CA0BDgB,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGgB,CAACE,UAAOC,YAAhCL,EAlBD,SAACnB,GAIX,OAAIA,EAAMqB,OACC,kBAAC,IAAD,CAAUI,GAAI,UAGlB,6BACH,qCACA,kBAACjB,EAAD,CAAgBI,SATH,SAACc,GACd1B,EAAMuB,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.40d64b64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ControlForm_formControl__5x98l\",\"error\":\"ControlForm_error__18Hk7\",\"formError\":\"ControlForm_formError__3imfo\"};","import React from \"react\";\r\n\r\nexport const required = value => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbol`\r\n    return undefined\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./ControlForm.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={classes.formControl + \"\" + classes.error}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={classes.formControl + \"\" + classes.error}>\r\n            <input {...input} {...props} />\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {required} from \"../../helpers/validators\";\r\nimport {Input} from \"../common/ControlForm/ControlForm\";\r\nimport classes from \"../common/ControlForm/ControlForm.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"email\"} name={\"email\"} component={Input}\r\n                       validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"password\"} name={\"password\"} component={Input}\r\n                       type={\"password\"} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/> remember me\r\n            </div>\r\n            {error && <div className={classes.formError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/Main\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps,{login, logout})(Login)\r\n"],"sourceRoot":""}