{"version":3,"sources":["components/common/ControlForm/ControlForm.module.css","helpers/validators.jsx","components/common/ControlForm/ControlForm.jsx","components/HOC/withAuthRedirect.jsx","components/Main/Main.module.css","components/Main/MyPosts/MyPosts.module.css","components/Main/MyPosts/Post/Post.module.css","components/Main/MyInfo/MyInfo.module.css","components/Main/MyPosts/Post/Post.jsx","components/Main/MyPosts/MyPosts.jsx","components/Status/Status.jsx","components/Status/StatusH.jsx","components/Main/MyInfo/PersonInfo.jsx","components/Main/MyPosts/MyPostContainer.jsx","components/Main/Main.jsx","components/Main/MainContainer.jsx"],"names":["module","exports","required","value","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","classes","formControl","Input","withAuthRedirect","Component","this","isAuth","to","React","Post","imgProf","src","sms","likesCount","maxLength15","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","validate","MyPosts","postsElements","posts","map","p","createRef","wall","values","addPost","newPostText","StatusH","useState","editMode","setEditMode","status","setStatus","console","log","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","PersonInfo","MyPostsContainer","connect","state","mainPage","dispatch","newPostElement","addPostActionCreator","Main","main","profile","MainContainer","userId","match","params","authorizedUserId","history","push","getUserProfileTC","getStatusTC","compose","auth","withRouter"],"mappings":"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","file":"static/js/4.8da7e124.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ControlForm_formControl__5x98l\",\"error\":\"ControlForm_error__18Hk7\",\"formError\":\"ControlForm_formError__3imfo\"};","import React from \"react\";\r\n\r\nexport const required = value => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbol`\r\n    return undefined\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./ControlForm.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={classes.formControl + \"\" + classes.error}>\r\n            <textarea {...input} {...props} />\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={classes.formControl + \"\" + classes.error}>\r\n            <input {...input} {...props} />\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return RedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__IubzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"MyPosts_wall__1FjTb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgProf\":\"Post_imgProf__1Veyi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"MyInfo_description__zBva4\"};","import React from 'react';\r\nimport classes from \"../Post/Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.imgProf}>\r\n            <img src=\"https://archilab.online/images/1/123.jpg\"></img>\r\n            { props.sms }\r\n            <div>\r\n                <span>likes {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/mainPage-reducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/ControlForm/ControlForm\";\r\nimport {maxLength, required} from \"../../../helpers/validators\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post sms={p.sms} likesCount={p.likesCount} />);\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.wall}>\r\n            <div>\r\n                My posts\r\n            </div>\r\n            <MyPostReduxForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength15 = maxLength(15)\r\n\r\nconst MyPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} validate={[required, maxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <button>ADD POST</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({form: \"myPost\"})(MyPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\n\r\nclass Status extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}> {this.props.status || \"Hi\" }</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true}\r\n                           onBlur={this.deactivateEditMode} type=\"text\"\r\n                           value={this.state.status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Status;","import React, {useState} from \"react\";\r\n\r\n\r\nconst StatusH = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(false)\r\n    let [status,setStatus] = useState(props.status)\r\n    console.log(status)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <div>\r\n        {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}> {props.status || \"---\"}</span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input autoFocus={true}\r\n                   onChange={onStatusChange}\r\n                   value={status}\r\n                   onBlur={deactivateEditMode} />\r\n        </div>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default StatusH\r\n\r\n// class Status extends React.Component {\r\n//\r\n//     state = {\r\n//         editMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//\r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: true\r\n//         })\r\n//     }\r\n//\r\n//     deactivateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: false\r\n//         });\r\n//         this.props.updateStatus(this.state.status)\r\n//     }\r\n//\r\n//     onStatusChange = (e) => {\r\n//         this.setState({\r\n//             status: e.currentTarget.value\r\n//         });\r\n//     }\r\n//\r\n//     render() {\r\n//         return <div>\r\n//             {!this.state.editMode &&\r\n//                 <div>\r\n//                     <span onDoubleClick={this.activateEditMode}> {this.props.status || \"Hi\" }</span>\r\n//                 </div>\r\n//             }\r\n//             {this.state.editMode &&\r\n//                 <div>\r\n//                     <input onChange={this.onStatusChange} autoFocus={true}\r\n//                            onBlur={this.deactivateEditMode} type=\"text\"\r\n//                            value={this.state.status}/>\r\n//                 </div>\r\n//             }\r\n//         </div>\r\n//     }\r\n// }\r\n//\r\n// export default Status;","import React from \"react\";\r\nimport classes from \"./MyInfo.module.css\"\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport Status from \"../../Status/Status\";\r\nimport StatusH from \"../../Status/StatusH\";\r\n\r\n\r\nconst PersonInfo = (props) => {\r\n    // if (!props.profile) {\r\n    //     return <Preloader/>\r\n    // }\r\n    return(\r\n        <div className=\"TopInfo\">\r\n            {/*<div>*/}\r\n            {/*    <img src=\"https://static.ukrinform.com/photos/2015_10/thumb_files/630_360_1445509380-6448.jpg\" width=\"100%\" height=\"250px\"></img>*/}\r\n            {/*</div>*/}\r\n            {/*<div className={classes.description}>*/}\r\n            {/*    <img src={props.profile.photos.large}/> ?*/}\r\n            {/*    <img src={props.profile.photos.large}/> : <img src=\"https://avatarko.ru/img/kartinka/5/kot_ochki_4754.jpg\" width=\"100%\" height=\"200px\"/>*/}\r\n            {/*</div>*/}\r\n            {/*<Status status={props.status} updateStatus={props.updateStatus} />*/}\r\n            <StatusH status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PersonInfo;","import React from 'react';\r\nimport MyPosts from \"./MyPosts\";\r\nimport mainPageReducer, {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/mainPage-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.mainPage.posts,\r\n        newPostText: state.mainPage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostElement) => {\r\n            dispatch(addPostActionCreator(newPostElement))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from '../Main/Main.module.css'\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport PersonInfo from \"./MyInfo/PersonInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <div className={classes.main}>\r\n            <PersonInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Main;","import React from \"react\";\r\nimport Main from \"./Main\";\r\nimport * as axios from \"axios\";\r\nimport {getStatusTC, getUserProfileTC, updateStatus} from \"../../Redux/mainPage-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfileTC(userId);\r\n        this.props.getStatusTC(userId)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuth) return <Redirect to='/login' />\r\n        return (\r\n            <Main {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.mainPage.profile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.mainPage.status,\r\n        authorizedUserId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfileTC, getStatusTC, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(MainContainer);\r\n\r\n\r\n"],"sourceRoot":""}