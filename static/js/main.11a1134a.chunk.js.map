{"version":3,"sources":["Api/api.js","components/Preloader/Preloader.jsx","Redux/sideBar-reducer.js","Redux/state.js","components/Menu/Menu.jsx","helpers/refactors-object.js","Redux/users-reduser.js","components/User/Common/Paginator.jsx","components/User/User.jsx","components/User/Users.jsx","Redux/users-selectors.js","components/User/UsersContainer.jsx","components/Tittle/Tittle.jsx","components/Tittle/TittleContainer.jsx","Redux/app-reducer.js","App.js","serviceWorker.js","Redux/redux-store.js","index.js","components/User/User.module.css","Redux/auth-reducer.js","Redux/mainPage-reducer.js","Redux/messagePage-reducer.js","components/Tittle/Tittle.module.css","components/User/Common/Paginator.module.css","components/Menu/Menu.module.css","assets/image/Eclipse-1s-200px.svg"],"names":["instance","axios","withCredentials","baseURL","key","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","authAPI","me","login","email","password","rememberMe","post","logout","delete","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","Preloader","props","src","preloaderImage","initialState","myFriends","friend","id","sidebarReducer","state","store","_state","mainPage","posts","sms","likesCount","newPostText","messagePage","message","dialogs","name","sidebar","getState","this","dispatch","action","mainPageReducer","messagePageReducer","window","Menu","className","classes","menu","to","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","setUsers","type","showPreloader","usersReducer","followed","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","numberPage","changeNumberPage","leftPortion","rightPortion","styles","paginator","onClick","filter","p","e","User","user","unsubscribe","subscribe","row","avaAndBut","avatar","photos","small","userInfo","uniqueUrlName","Users","usersPage","getPageSize","UsersContainer","pageNumber","setCurrentPage","getUsersTC","React","Component","connect","a","totalCount","Tittle","tittle","image","log","isAuth","TittleContainer","auth","initialized","appReducer","DialogsContainer","lazy","Login","MainContainer","App","initializeApp","path","render","fallback","compose","withRouter","app","promise","getUserAuthTC","Promise","all","Boolean","location","hostname","match","reducers","combineReducers","authReducer","form","formReducer","createStore","applyMiddleware","thunkMiddleware","ReactDOM","bind","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","module","exports","authorizedUserAC","resultCode","messages","length","stopSubmit","_error","profile","addPostActionCreator","setStatusAC","getUserProfileTC","getStatusTC","newPost","stateCopy","sendMessageCreator","newMessageText","body"],"mappings":"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","file":"static/js/main.11a1134a.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    key: {\r\n        \"API-KEY\": \"6070d609-7209-4d7e-b68d-c86179c676cf\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    // subscribe (userId) {\r\n    //     return instance.post(`follow/` + userId)\r\n    // },\r\n    // unsubscribe (userId) {\r\n    //     return instance.delete(`follow/` + userId)\r\n    // },\r\n    // getProfile (userId) {\r\n    //     return instance.get(`profile/` + userId)\r\n    //         .then(response => {\r\n    //             this.props.setProfileAC(response.data)\r\n    //         })\r\n    // }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}","import React from \"react\";\r\nimport preloaderImage from \"../../assets/image/Eclipse-1s-200px.svg\"\r\n\r\nconst Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloaderImage}/>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Preloader;","let initialState = {\r\n    myFriends: [\r\n        {friend: \"Anton\", id: \"1\"},\r\n        {friend: \"Ivan\", id: \"2\"},\r\n        {friend: \"Stepan\", id: \"3\"},\r\n        {friend: \"Jora\", id: \"4\"},\r\n        {friend: \"Roman\", id: \"5\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import mainPageReducer from \"./mainPage-reducer\";\r\nimport messagePageReducer from \"./messagePage-reducer\";\r\nimport sidebarReducer from \"./sideBar-reducer\";\r\n\r\n\r\nlet store = {\r\n    _state: {\r\n        mainPage: {\r\n            posts: [\r\n                {id: \"1\", sms: \"Hey, how are you?\", likesCount: 8},\r\n                {id: \"2\", sms: \"Bingoooo\", likesCount: 17}\r\n            ],\r\n            newPostText: \"\"\r\n        },\r\n        messagePage: {\r\n            message: [\r\n                {id: 1, sms: \"Hi\" },\r\n                {id: 2, sms: \"Yo\"}\r\n            ],\r\n            dialogs: [\r\n                {id: \"1\", name: \"Stepan\"},\r\n                {id: \"2\", name: \"Ivan\"},\r\n                {id: \"3\", name: \"Valera\"},\r\n                {id: \"4\", name: \"Grisha\"},\r\n                {id: \"5\", name: \"Stasik\"}\r\n            ],\r\n            // newMessageText: \"\"\r\n        },\r\n        sidebar: {\r\n            myFriends: [\r\n                {friend: \"Anton\", id: \"1\"},\r\n                {friend: \"Ivan\", id: \"2\"},\r\n                {friend: \"Stepan\", id: \"3\"},\r\n                {friend: \"Jora\", id: \"4\"},\r\n                {friend: \"Roman\", id: \"5\"}\r\n            ]\r\n        }\r\n    },\r\n\r\n    getState() {\r\n        return this._state\r\n    },\r\n\r\n    dispatch(action) {\r\n        this._state.mainPage = mainPageReducer(this._state.mainPage, action)\r\n        this._state.messagePage = messagePageReducer(this._state.messagePage, action)\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action)\r\n\r\n        // this._rerenderEntireTree(this._state);\r\n\r\n    },\r\n}\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport classes from '../Menu/Menu.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport state from \"../../Redux/state\";\r\n\r\nconst Menu = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className={classes.menu}>\r\n                <ul>\r\n                    <li><NavLink to=\"/Main\"> Profile </NavLink></li>\r\n                    <li><NavLink to=\"/Dialogs\"> Messages </NavLink></li>\r\n                    <li><NavLink to=\"/Users\"> Users </NavLink></li>\r\n                    <li><a>News</a></li>\r\n                    <li><a>Music</a></li>\r\n                    <li><a>Settings</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Menu;","export const updateObjectInArray = (items,itemId,objPropName,newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {usersAPI} from \"../Api/api\";\r\nimport {updateObjectInArray} from \"../helpers/refactors-object\";\r\n\r\nconst SUBSCRIBE = \"SUBSCRIBE\"\r\nconst UNSUBSCRIBE = \"UNSUBSCRIBE\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SHOW_PRELOADER = \"SHOW_PRELOADER\"\r\nconst TOTAL_USERS_COUNT = \"TOTAL-USERS-COUNT\"\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SUBSCRIBE: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId,\"id\",{followed: true})\r\n            }\r\n        }\r\n        case UNSUBSCRIBE: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId,\"id\",{followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage }\r\n        }\r\n        case SHOW_PRELOADER: {\r\n            return {...state,  isFetching: action.isFetching}\r\n        }\r\n        case TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount:action.totalUsersCount}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const subscribe = (userId) => ({type: SUBSCRIBE, userId})\r\nexport const unsubscribe = (userId) => ({type: UNSUBSCRIBE, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const showPreloader = (isFetching) => ({type:SHOW_PRELOADER, isFetching})\r\nexport const setTotalUsersCountAC = (totalUsersCount) => ({type:TOTAL_USERS_COUNT, totalUsersCount})\r\n\r\n\r\nexport const getUsersTC = (currentPage, pageSize) => async (dispatch) => {\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(showPreloader(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCountAC(data.totalCount))\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\"\r\n\r\nlet Paginator = ({totalUsersCount,pageSize,currentPage,onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = []\r\n    for (let i=1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [numberPage, changeNumberPage] = useState(1)\r\n    let leftPortion = (numberPage - 1) * pageSize + 1\r\n    let rightPortion = numberPage * pageSize\r\n\r\n\r\n    return <div>\r\n        <div className={styles.paginator}>\r\n            {numberPage > 1 &&\r\n            <button onClick={ () => changeNumberPage(numberPage - 1) }> Previous </button>}\r\n            {pages\r\n                .filter(p => p >= leftPortion && p <= rightPortion)\r\n                .map(p => {\r\n                    return <span className={currentPage === p && styles.currentPage}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p)\r\n                                 }}> {p} </span>\r\n                })}\r\n            {portionCount > numberPage &&\r\n            <button onClick={() => { changeNumberPage(numberPage + 1 )} }> Next </button>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport styles from \"./User.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, unsubscribe, subscribe}) => {\r\n    return <div>\r\n        <div className={styles.row}>\r\n            <div className={styles.avaAndBut}>\r\n                <div className={styles.avatar}>\r\n                    <NavLink to={'/main/' + user.id}>\r\n                        {user.photos !== null ?\r\n                            <img src=\"https://klike.net/uploads/posts/2019-03/1551511801_1.jpg\"/> : user.photos.small}\r\n                    </NavLink>\r\n                </div>\r\n                <div> {user.followed\r\n                    ? <button className={styles.subscribe} onClick={() => {\r\n                        unsubscribe(user.id)\r\n                    }}>Unsubscribe</button> :\r\n                    <button className={styles.subscribe} onClick={() => {\r\n                        subscribe(user.id)\r\n                    }}>Subscribe</button>}\r\n                </div>\r\n            </div>\r\n            <div className={styles.userInfo}>\r\n                <div>{user.name}</div>\r\n                <div>`{user.uniqueUrlName} user country`</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport Paginator from \"./Common/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({totalUsersCount, pageSize, onPageChanged, currentPage, users, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator totalUsersCount={totalUsersCount} pageSize={pageSize}\r\n                   onPageChanged={onPageChanged} currentPage={currentPage}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     key={u.id}\r\n                                     subscribe={props.subscribe}\r\n                                     unsubscribe={props.unsubscribe}/>)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const totalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const currentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const isFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUsersTC,\r\n    setCurrentPage,\r\n    setUsers,\r\n    showPreloader,\r\n    subscribe,\r\n    unsubscribe\r\n} from \"../../Redux/users-reduser\";\r\nimport Users from \"./Users\";\r\nimport * as axios from \"axios\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport {usersAPI} from \"../../Api/api\";\r\nimport {currentPage, getPageSize, getUsers, isFetching,totalUsersCount} from \"../../Redux/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.showPreloader(true)\r\n        this.props.getUsersTC(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   unsubscribe={this.props.unsubscribe}\r\n                   subscribe={this.props.subscribe}\r\n                   onPageChanged={this.onPageChanged}/>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: totalUsersCount(state),\r\n        currentPage: currentPage(state),\r\n        isFetching: isFetching(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps, {unsubscribe, subscribe,setUsers, setCurrentPage,showPreloader, getUsersTC})(UsersContainer);\r\n","import React from 'react';\r\nimport classes from '../Tittle/Tittle.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Tittle = (props) => {\r\n\r\n    return (\r\n        <header className={classes.tittle}>\r\n            <div className={classes.image}>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/NASA_logo.svg/200px-NASA_logo.svg.png\"></img>\r\n            </div>\r\n            <div className={classes.log}>\r\n                {props.isAuth\r\n                    ? <div>{props.login}\r\n                    <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    ) \r\n}\r\n\r\nexport default Tittle;","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Tittle from \"./Tittle\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\n\r\n\r\n\r\nclass TittleContainer extends React.Component {\r\n\r\n    // componentDidMount() {\r\n    //     this.props.getUserAuthTC()\r\n    // }\r\n\r\n    render() {\r\n        return <Tittle {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {logout} ) (TittleContainer);\r\n","import {getUserAuthTC} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCСESS = \"INITIALIZED-SUCCESS\"\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCСESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializationAC = () => ({type: INITIALIZED_SUCСESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getUserAuthTC())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializationAC())\r\n        })\r\n}\r\n\r\nexport default appReducer","import React, {Suspense} from 'react';\nimport './App.css';\nimport Menu from './components/Menu/Menu';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport UsersContainer from \"./components/User/UsersContainer\";\nimport TittleContainer from \"./components/Tittle/TittleContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport withRouter from \"react-router-dom/es/withRouter\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\nconst Login = React.lazy(() => import(\"./components/Login/Login\"))\nconst MainContainer = React.lazy(() => import(\"./components/Main/MainContainer\"))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"main-page\">\n                <TittleContainer/>\n                <Menu/>\n                <div>\n                    <Route path='/dialogs' render={() => {\n                        return <Suspense fallback={<Preloader/>}>\n                            <DialogsContainer/>\n                        </Suspense>\n                    }}/>\n                    <Route path='/main/:userId?' render={() => {\n                        return <Suspense fallback={<Preloader/>}>\n                            <MainContainer/>\n                        </Suspense>\n                    }}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => {\n                        return <Suspense fallback={<Preloader/>}>\n                            <Login/>\n                        </Suspense>\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport mainPageReducer from \"./mainPage-reducer\";\r\nimport messagePageReducer from \"./messagePage-reducer\";\r\nimport sidebarReducer from \"./sideBar-reducer\";\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    mainPage: mainPageReducer,\r\n    messagePage: messagePageReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./Redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App dispatch={store.dispatch.bind(store)} store={store}/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n)\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App state={ state } addPost={ addPost } />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWAs\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__1egS4\",\"subscribe\":\"User_subscribe__1cjXw\",\"row\":\"User_row__1Lxbu\",\"avaAndBut\":\"User_avaAndBut__3_1pI\",\"userInfo\":\"User_userInfo__3W6m9\",\"page\":\"User_page__3bYnk\",\"changedPage\":\"User_changedPage__vTPmQ\"};","import {authAPI} from \"../Api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nconst AUTHORIZED = \"AUTHORIZED\"\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTHORIZED: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const authorizedUserAC = (userId, email, login, isAuth) => ({type: AUTHORIZED, data: {userId, email, login, isAuth}})\r\n\r\nexport const getUserAuthTC = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(authorizedUserAC(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserAuthTC())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error!\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authorizedUserAC(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {profileAPI, usersAPI} from \"../Api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_PROFILE = \"SET-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: \"1\", sms: \"Hey, how are you?\", likesCount: 8},\r\n        {id: \"2\", sms: \"Bingoooo\", likesCount: 17}\r\n    ],\r\n    profile: null,\r\n    status: null\r\n}\r\n\r\n\r\nconst mainPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: \"5\",\r\n                sms: action.newPostText,\r\n                likesCount: 5\r\n            };\r\n            let stateCopy = {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case SET_PROFILE: {\r\n            return {...state, profile:action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status:action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setProfileAC = (profile) => ({type: SET_PROFILE, profile})\r\nexport const setStatusAC = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfileTC = (userId) => (dispatch) => {\r\n    profileAPI.getProfile(userId).then(response => {\r\n        dispatch(setProfileAC(response.data))\r\n    })\r\n}\r\n\r\nexport const getStatusTC = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatusAC(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatusAC(status))\r\n    }\r\n}\r\n\r\nexport default mainPageReducer;","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n    message: [\r\n        {id: 1, sms: \"Hi\" },\r\n        {id: 2, sms: \"Yo\"}\r\n    ],\r\n    dialogs: [\r\n        {id: \"1\", name: \"Stepan\"},\r\n        {id: \"2\", name: \"Ivan\"},\r\n        {id: \"3\", name: \"Valera\"},\r\n        {id: \"4\", name: \"Grisha\"},\r\n        {id: \"5\", name: \"Stasik\"}\r\n    ]\r\n};\r\n\r\n\r\nconst messagePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageText\r\n            return {\r\n                ...state,\r\n                message: [...state.message,{id: 18, sms: body} ]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({type:SEND_MESSAGE, newMessageText})\r\n\r\n\r\nexport default messagePageReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tittle\":\"Tittle_tittle__2rfQF\",\"image\":\"Tittle_image__17BeB\",\"log\":\"Tittle_log__3OVI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__kleWg\",\"currentPage\":\"Paginator_currentPage__JwGg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__3d4RL\"};","module.exports = __webpack_public_path__ + \"static/media/Eclipse-1s-200px.db5ccd0a.svg\";"],"sourceRoot":""}